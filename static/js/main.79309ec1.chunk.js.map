{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/posts.js","components/posts/Home.js","components/posts/Post.js","components/posts/PostForm.js","components/posts/PostCreate.js","components/posts/PostEdit.js","components/posts/Posts.js","components/posts/MyPosts.js","App.js","index.js"],"names":["AutoDismissAlert","props","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","Component","authenticatedOptions","to","NavDropdown","unauthenticatedOptions","alwaysOptions","Header","user","Navbar","bg","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","url","method","data","signOut","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","setUser","msgAlert","useState","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","console","error","Form","onSubmit","Group","controlId","Label","Control","required","type","value","placeholder","onChange","target","Button","SignIn","onSignIn","log","SignOut","clearUser","useEffect","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","createPost","title","content","indexPosts","get","indexMyPosts","showPost","deletePost","delete","updatePost","Home","posts","setPosts","fetchData","Spinner","animation","role","postsList","map","_id","Post","setPost","deleted","setDeleted","useParams","handleDeleteClick","owner","onClick","PostForm","handleSubmit","setTitle","setContent","name","PostCreate","createdId","setCreatedId","PostEdit","updated","setUpdated","Posts","MyPosts","App","msgAlerts","setMsgAlerts","uuid","filter","msg","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79309ec1.chunk.js","sourcesContent":["import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","/* eslint-disable no-tabs */\nimport React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\n\nimport './header.scss'\n// import Navbar from 'react-bootstrap/Navbar'\n// import Container from 'react-bootstrap/Container'\n// import Nav from 'react-bootstrap/Nav'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\n\n// These are the links you'll see if you're signed in\nconst authenticatedOptions = (<>\n  <div>\n    <div className='collapsable'>\n\n      <NavLink to='/myposts' className='nav-link banner'>\nMy Posts\n      </NavLink>\n      <NavLink to='/posts/create' className='nav-link banner'>\nMake a Post\n      </NavLink>\n    </div>\n  </div>\n  <NavDropdown>\n    <NavLink to='/change-password' className='nav-link dropped'>\nChange Password\n    </NavLink>\n    <NavLink to='/sign-out' className='nav-link dropped'>\nSign Out\n    </NavLink>\n  </NavDropdown></>\n)\n\n// These are the links you'll see if you're signed out\nconst unauthenticatedOptions = (\n  <>\n    <NavDropdown>\n      <div className='collapsable sign-in-up-links'>\n        <NavLink to='/sign-up' className='nav-link dropped'>\n\t\t\t\t\tSign Up\n        </NavLink>\n        <NavLink to='/sign-in' className='nav-link dropped'>\n\t\t\t\t\tSign In\n        </NavLink>\n      </div>\n    </NavDropdown>\n  </>\n)\n\n// These are the navigation links that will always show\nconst alwaysOptions = (\n  <>\n    <NavLink to='/' className='nav-link home-link'>Home</NavLink>\n  </>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='info' variant='dark'>\n    <Container>\n      <Navbar.Brand>\n        {/* Text decoration: none, will remove the underline text decoration\n            from the link */}\n        <Link to='/' style={{ color: '#fff', textDecoration: 'none' }}>\n\t\t\t\t\tMessageBoard\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav' className='collapsable'>\n        {/* Add margin to the start (left) automatically\n            So that the links are pushed to the right side of the screen. */}\n        <Nav className='ms-auto collapsable'>\n          {/* If we have a user, show the span component */}\n          {user && (\n          /* Add some margin after the welcome message to separate it from the following links */\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {/* If we have a user (it isnt null), show the authenticated links\n              otherwise show the unauthenticated links */}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://quiet-everglades-63317.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n// export const signUp = (credentials) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: email,\n        password: password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n// Access the signUp function through a `named import`\nimport { signUp, signIn } from '../../api/auth'\n\n// import react bootstrap components\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { signUpFailure, signUpSuccess } from '../AutoDismissAlert/messages'\n\nconst SignUp = ({ setUser, msgAlert }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // to use async/await, add `async` to the function that you use `await` and a promise in\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      // Call the signUp function to make an axios request\n      // to create a user\n      // to use `async/await`, put the `await` keyword before the\n      // function that returns a promise\n      await signUp(email, password, passwordConfirmation)\n      // if we signed up successfully, then make a signIn    request\n      // these two lines are the same from SignIn\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      // Alert the user, that they signed up successfully\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        // this will be green\n        variant: 'success'\n      })\n\n      setShouldNavigate(true)\n    } catch (error) {\n      // Alert the user, that they failed to sign up\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        // this will be red\n        variant: 'danger'\n      })\n\n      console.error(error)\n      // if we fail to sign up, clear out the form\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n    }\n  }\n\n  // onSignUp using promises .then/.catch\n  // const onSignUp = event => {\n  //   event.preventDefault()\n\n  //   // Call the signUp function to make an axios request\n  //   // to create a user\n  //   signUp(email, password, passwordConfirmation)\n  //     .then(res => {\n  //       console.log('res is', res)\n  //       setShouldNavigate(true)\n  //     })\n  //     .catch(error => {\n  //       console.error(error)\n  //       // if we fail to sign up, clear out the form\n  //       setEmail('')\n  //       setPassword('')\n  //       setPasswordConfirmation('')\n  //     })\n  // }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      {/* mx-auto, means set the margin on the x axis (left and right) automatically. This will center the column. */}\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        {/* When the react bootstrap form is submitted\n          call the onSignUp function */}\n        <Form onSubmit={onSignUp}>\n          {/* controlId will set the `for` attribute for the `label` and the id for the `control` (input) */}\n          <Form.Group className='mb-3' controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={(event) => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          {/* Adding a message if the passwords dont match */}\n          {password !== passwordConfirmation && <h3>Passwords dont match</h3>}\n\n          <Button className='text-white' variant='primary' type='submit'>Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { signInFailure, signInSuccess } from '../AutoDismissAlert/messages'\n\n// accept a setUser prop, that is passed down from App.js\nconst SignIn = ({ setUser, msgAlert }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignIn = async (event) => {\n    event.preventDefault()\n\n    try {\n      const res = await signIn(email, password)\n      // Set the user with the one from our response's data\n      // this is similar to store.user = responseData.user in jquery\n      setUser(res.data.user)\n\n      console.log('res is', res)\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        // this will be green\n        variant: 'success'\n      })\n      // this will cause the browser to navigate to the home page\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        // this will be red\n        variant: 'danger'\n      })\n      console.error(error)\n      setEmail('')\n      setPassword('')\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={onSignIn}>\n          <Form.Group className='mb-3' controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={(event) => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group className='mb-3' controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit' className='text-white'>Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignIn\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ user, clearUser, msgAlert }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n    // for performance reasons, when using `useEffect`\n    // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n      // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  // we dont actually want to see the SignOut component\n  // we want it to be invisble, so we return a falsey value\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n// Access the signUp function through a `named import`\nimport { changePassword } from '../../api/auth'\n\n// import react bootstrap components\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { changePasswordFailure, changePasswordSuccess } from '../AutoDismissAlert/messages'\n\nconst ChangePassword = ({ user, msgAlert }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // to use async/await, add `async` to the function that you use `await` and a promise in\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      // Call the signUp function to make an axios request\n      // to create a user\n      // to use `async/await`, put the `await` keyword before the\n      // function that returns a promise\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        // this will be green\n        variant: 'success'\n      })\n\n      setShouldNavigate(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        // this will be red\n        variant: 'danger'\n      })\n      console.error(error)\n      // if we fail to sign up, clear out the form\n      setOldPassword('')\n      setNewPassword('')\n    }\n  }\n\n  // onSignUp using promises .then/.catch\n  // const onSignUp = event => {\n  //   event.preventDefault()\n\n  //   // Call the signUp function to make an axios request\n  //   // to create a user\n  //   signUp(email, password, passwordConfirmation)\n  //     .then(res => {\n  //       console.log('res is', res)\n  //       setShouldNavigate(true)\n  //     })\n  //     .catch(error => {\n  //       console.error(error)\n  //       // if we fail to sign up, clear out the form\n  //       setEmail('')\n  //       setPassword('')\n  //       setPasswordConfirmation('')\n  //     })\n  // }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      {/* mx-auto, means set the margin on the x axis (left and right) automatically. This will center the column. */}\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        {/* When the react bootstrap form is submitted\n          call the onSignUp function */}\n        <Form onSubmit={onChangePassword}>\n          {/* controlId will set the `for` attribute for the `label` and the id for the `control` (input) */}\n          <Form.Group className='mb-3' controlId='oldPassword'>\n            <Form.Label>Old Password</Form.Label>\n            <Form.Control\n              required\n              type='password'\n              value={oldPassword}\n              placeholder='Enter password'\n              onChange={(event) => {\n                setOldPassword(event.target.value)\n                console.log(event.target.value)\n              }\n              }\n            />\n          </Form.Group>\n\n          <Form.Group className='mb-3' controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              value={newPassword}\n              type='password'\n              placeholder='Password'\n              onChange={(event) => setNewPassword(event.target.value)}\n            />\n          </Form.Group>\n\n          <Button className='text-white' variant='secondary' type='submit'>Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import axios from 'axios'\nimport apiUrl from '../apiConfig'\n\nexport const createPost = (title, content, user) => {\n  return axios.post(\n    `${apiUrl}/posts`,\n    { post: { title, content } },\n    // Pass along the authorization which includes our user's token\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n\n// index posts\nexport const indexPosts = () => {\n  return axios.get(`${apiUrl}/posts`)\n}\n\nexport const indexMyPosts = (user) => {\n  return axios.get(`${apiUrl}/myposts`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showPost = (id) => {\n  return axios.get(`${apiUrl}/posts/${id}/`, {\n  })\n}\n\nexport const deletePost = (id, user) => {\n  return axios.delete(`${apiUrl}/posts/${id}`, {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updatePost = (id, title, content, user) => {\n  return axios.patch(\n    `${apiUrl}/posts/${id}`,\n    { post: { title, content } },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Spinner } from 'react-bootstrap'\nimport { indexPosts } from '../../api/posts'\n\nconst Home = ({ msgAlert }) => {\n  const [posts, setPosts] = useState(null)\n\n  // Run once, when the component mounts\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await indexPosts()\n        setPosts(res.data.posts)\n      } catch (error) {\n        msgAlert({\n          heading: 'Posts failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  // If posts are `null`, we are loading\n  if (!posts) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n\n  // Otherwise, display the posts\n  const postsList = posts.map((post) => (\n    <div className = \"post-list-item\" key={post._id}>\n      <Link to={`/posts/${post._id}`}>{post.title}</Link>\n    </div>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='post-list'>\n        <h3>Posts</h3>\n        <div>{postsList}</div>\n      </div>\n    </div>\n  )\n}\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport { Link, Navigate, useParams } from 'react-router-dom'\nimport { Spinner, Button } from 'react-bootstrap'\n\nimport { deletePost, showPost } from '../../api/posts'\n\nconst Post = ({ user, msgAlert }) => {\n  const [post, setPost] = useState(null)\n  const [deleted, setDeleted] = useState(false)\n  const { id } = useParams()\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await showPost(id)\n        setPost(res.data.post)\n      } catch (error) {\n        msgAlert({\n          heading: 'Post failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n  const handleDeleteClick = async () => {\n    try {\n      await deletePost(id, user)\n      setDeleted(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to delete the post',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // 3 states:\n  // If post is `null`, we are loading\n  if (!post) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  } else if (deleted) {\n    return <Navigate to='/posts' />\n  } else if (user) {\n    if (user._id !== post.owner) {\n      // console.log(user._id)\n      // console.log(post.owner)\n      // We have a post, display it!\n      return (\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3 className=\"post-title\">{post.title}</h3>\n            <p>{post.content}</p>\n          </div>\n        </div>\n        // ** add comment component ? **\n      )\n    } else {\n      // We have a post, display it!\n      return (\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3>{post.title}</h3>\n            <p>{post.content}</p>\n            <Button variant='danger' onClick={handleDeleteClick}>\nDelete Post\n            </Button>\n            <Link to={`/posts/${id}/edit`}>\n              <Button variant='primary' type='submit'>\nUpdate Post\n              </Button>\n            </Link>\n          </div>\n        </div>\n      )\n    }\n  } else {\n    // Unauthenticated View\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>{post.title}</h3>\n          <p>{post.content}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Post\n","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst PostForm = ({ handleSubmit, title, content, setTitle, setContent }) => (\n  <Form onSubmit={handleSubmit}>\n    <Form.Group controlId='title'>\n      <Form.Label>Title</Form.Label>\n      <Form.Control\n        placeholder='Post...'\n        name='title'\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n      />\n    </Form.Group>\n\n    <Form.Group controlId='content'>\n      <Form.Label>Content</Form.Label>\n      <Form.Control\n        placeholder='Post Content'\n        name='content'\n        value={content}\n        onChange={event => setContent(event.target.value)}\n      />\n    </Form.Group>\n    <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n  </Form>\n)\n\nexport default PostForm\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\n// Import PostForm:\nimport PostForm from './PostForm'\nimport { createPost } from '../../api/posts'\n\nconst PostCreate = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [createdId, setCreatedId] = useState(null)\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      const res = await createPost(title, content, user)\n      setCreatedId(res.data.post._id)\n\n      msgAlert({\n        heading: 'Post Created',\n        message: `Created ${title} successfully.`,\n        variant: 'success'\n      })\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to make post',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  // if user is null, redirect to home page\n  if (!user) {\n    return <Navigate to='/' />\n  } else if (createdId) {\n    // if post has been created, Navigate to the 'show' page\n    return <Navigate to={`/posts/${createdId}`} />\n  }\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Create Post</h3>\n        <PostForm\n          handleSubmit={handleSubmit}\n          title={title}\n          content={content}\n          setTitle={setTitle}\n          setContent={ setContent }\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PostCreate\n","import React, { useState, useEffect } from 'react'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport PostForm from './PostForm'\nimport { showPost, updatePost } from '../../api/posts'\n\nconst PostEdit = ({ user, msgAlert }) => {\n  const [title, setTitle] = useState('')\n  const [content, setContent] = useState('')\n  const [updated, setUpdated] = useState(false)\n  const { id } = useParams()\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await showPost(id, user)\n        setTitle(res.data.post.title)\n        setContent(res.data.post.content)\n      } catch (error) {\n        msgAlert({\n          heading: 'Failed to load post',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  const handleSubmit = async event => {\n    event.preventDefault()\n\n    try {\n      await updatePost(id, title, content, user)\n      setUpdated(true)\n    } catch (error) {\n      msgAlert({\n        heading: 'Failed to update post',\n        message: error.message,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (updated) {\n    // Navigate to the 'show' page\n    return <Navigate to={`/posts/${id}`} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Edit Post</h3>\n        <PostForm\n          handleSubmit={handleSubmit}\n          title={title}\n          content={content}\n          setTitle={setTitle}\n          setContent={setContent}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default PostEdit\n","import React, { useEffect, useState } from 'react'\nimport { Link, Navigate } from 'react-router-dom'\n\nimport { Spinner } from 'react-bootstrap'\nimport { indexPosts } from '../../api/posts'\n\nconst Posts = ({ user, msgAlert }) => {\n  const [posts, setPosts] = useState(null)\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  // Run once, when the component mounts\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await indexPosts(user)\n        setPosts(res.data.posts)\n      } catch (error) {\n        msgAlert({\n          heading: 'Posts failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  // If posts are `null`, we are loading\n  if (!posts) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n\n  // Otherwise, display the posts\n  const postsList = posts.map(post => (\n    <li key={post._id}>\n      <Link to={`/posts/${post._id}`}>{post.title}</Link>\n    </li>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 className='post-header'>Posts</h3>\n        <ol>{postsList}</ol>\n      </div>\n    </div>\n  )\n}\n\nexport default Posts\n","import React, { useEffect, useState } from 'react'\nimport { Link, Navigate } from 'react-router-dom'\n\nimport { Spinner } from 'react-bootstrap'\nimport { indexMyPosts } from '../../api/posts'\n\nconst MyPosts = ({ user, msgAlert }) => {\n  const [posts, setPosts] = useState(null)\n\n  // if user is null, redirect to home page\n  // Note: Must check before useEffect, since it needs user\n  if (!user) {\n    return <Navigate to='/' />\n  }\n\n  // Run once, when the component mounts\n  useEffect(() => {\n    // When using async & await in a `useEffect` function\n    // We have to wrap our `async` code in a function:\n    // https://stackoverflow.com/a/53572588\n    const fetchData = async () => {\n      try {\n        const res = await indexMyPosts(user)\n        setPosts(res.data.posts)\n      } catch (error) {\n        msgAlert({\n          heading: 'Posts failed to load',\n          message: error.message,\n          variant: 'danger'\n        })\n      }\n    }\n    fetchData()\n  }, [])\n\n  // If posts are `null`, we are loading\n  if (!posts) {\n    return (\n      <Spinner animation='border' role='status'>\n        <span className='visually-hidden'>Loading...</span>\n      </Spinner>\n    )\n  }\n\n  // Otherwise, display the posts\n  const postsList = posts.map(post => (\n    <li key={post._id}>\n      <Link to={`/posts/${post._id}`}>{post.title}</Link>\n    </li>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Your Posts</h3>\n        <ul>{postsList}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default MyPosts\n","/* eslint-disable no-tabs */\nimport React, { useState } from 'react'\nimport { Route, Routes } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n\nimport Home from './components/posts/Home'\nimport Post from './components/posts/Post'\nimport PostCreate from './components/posts/PostCreate'\nimport PostEdit from './components/posts/PostEdit'\nimport Posts from './components/posts/Posts'\nimport MyPosts from './components/posts/MyPosts'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  const [msgAlerts, setMsgAlerts] = useState([])\n\n  const clearUser = () => setUser(null)\n\n  const msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\n  }\n\n  const deleteAlert = id => {\n    setMsgAlerts(msgAlerts => msgAlerts.filter(msg => msg.id !== id))\n  }\n\n  return (\n    <>\n      <Header user={user} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n          deleteAlert={deleteAlert}\n        />\n      ))}\n      <main className='container'>\n        <Routes>\n          <Route\n            path='/sign-up'\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-in'\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} />}\n          />\n          <Route\n            path='/sign-out'\n            element={\n              <SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} />\n            }\n          />\n          <Route\n            path='/change-password'\n            element={<ChangePassword msgAlert={msgAlert} user={user} />}\n          />\n\n          <Route path='/' element={<Home msgAlert={msgAlert} />} />\n          <Route\n            path='/posts'\n            element={<Posts msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/posts'\n            element={<Posts msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/myposts'\n            element={<MyPosts msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/posts/:id'\n            element={<Post msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/posts/create'\n            element={<PostCreate msgAlert={msgAlert} user={user} />}\n          />\n          <Route\n            path='/posts/:id/edit'\n            element={<PostEdit msgAlert={msgAlert} user={user} />}\n          />\n        </Routes>\n      </main>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}